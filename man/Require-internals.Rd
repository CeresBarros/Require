% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Require-helpers.R
\name{getPkgVersions}
\alias{getPkgVersions}
\alias{getAvailable}
\alias{installFrom}
\alias{updateInstalled}
\alias{doInstalls}
\alias{doLoading}
\alias{archiveVersionsAvailable}
\title{Internals used by \code{Require}}
\usage{
getPkgVersions(pkgDT, install)

getAvailable(pkgDT, purge = FALSE)

installFrom(pkgDT)

updateInstalled(pkgDT, installPkgNames, warn)

doInstalls(pkgDT, install_githubArgs, install.packagesArgs, ...)

doLoading(packages, ...)

archiveVersionsAvailable(package, repos)
}
\arguments{
\item{pkgDT}{A character string with full package names or a data.table
with at least 2 columns "Package" and "packageFullName".}

\item{install}{Logical or "force". If \code{FALSE}, this will not try to
install anything. If \code{"force"}, then it will force installation of
requested packages, mimicking a call to e.g., \code{install.packages}. If
\code{TRUE}, the default, then this function will try to install any
missing packages or dependencies.}

\item{purge}{Logical. Internally, there are calls to
\code{installed.packages} and \code{available.packages}}

\item{install_githubArgs}{List of optional named arguments, passed to \code{install_github}.}

\item{install.packagesArgs}{List of optional named arguments, passed to \code{install.packages}.}

\item{...}{Passed to \emph{all} of \code{install_github},
\code{install.packages}, and \code{remotes::install_version}, i.e., the
function will error if all of these functions can not use the ... argument.
Good candidates are e.g., \code{type} or \code{dependencies}. This can be
used with \code{install_githubArgs} or \code{install.packageArgs} which
give individual options for those 2 internal function calls.}

\item{packages}{Character vector of packages to install via
\code{install.packages}, then load (i.e., with \code{library}). If it is
one package, it can be unquoted (as in \code{require}). In the case of a
GitHub package, it will be assumed that the name of the repository is the
name of the package. If this is not the case, then pass a named character
vector here, where the names are the package names that could be different
than the GitHub repository name.}

\item{package}{A single package name (without version or github specifications)}

\item{repos}{The remote repository (e.g., a CRAN mirror), passed to either
\code{install.packages}, \code{install_github} or \code{installVersions}.}
}
\description{
While these are not intended to be called manually by users, they may be
of some use for advanced users.
}
\details{
\code{doInstall} is a wrapper around \code{install.packages},
\code{remotes::install_github}, and \code{remotes::install_version}.

\code{doLoading} is a wrapper around \code{require}.

\code{archiveVersionsAvailable} searches CRAN Archives for available versions.
It has been borrowed from a sub-set of the code in a non-exported function:
\code{remotes:::download_version_url}
}
